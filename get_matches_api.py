# -*- coding: utf-8 -*-
"""get_matches_api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QpfVmsmtCPV9dhTsq6pRW7l7bXjwzKzr

Import Libraries
"""

import requests
import json
from prettytable import PrettyTable
#import sqlite3
#import psycopg2
#import pandas as pd

"""Create pretty table object"""

tableobj = PrettyTable()

"""API endpoint"""

api_endpoint = 'https://feeds.incrowdsports.com/provider/opta/football/v1/matches?compId=10&season=2020'

"""Fetch data in JSON format"""

league_data = requests.get(api_endpoint).json()

"""Get the status code, returns status value"""

json_status = league_data['status']

print('API Status: ' + json_status)

league_data

sky_bet_championship = league_data['data']

print(type(sky_bet_championship))

"""Store data in Pretty Table"""

for match in sky_bet_championship:
    away_team_id = match['awayTeam']['id']
    away_team_name = match['awayTeam']['name']
    away_team_score = match['awayTeam']['score']
    home_team_id = match['homeTeam']['id']
    home_team_name = match['homeTeam']['name']
    home_team_score = match['homeTeam']['score']
    match_id = match['id']
    match_period = match['period']
    match_competition = match['competition']
    match_round = match['round']
    match_season = match['season']
    match_seasonId = match['seasonId']
    match_skyId = match['skyId']
    match_status = match['status']
    match_type = match['type']
    match_venue_id = match['venue']['id']
    match_venue_location = match['venue']['location']
    match_venue_name = match['venue']['name']

    tableobj.add_row([away_team_id, away_team_name, away_team_score, home_team_id, home_team_name, home_team_score, match_id, match_period, match_competition, match_round, match_season, match_seasonId, match_skyId, match_status, match_type, match_venue_id, match_venue_location, match_venue_name])

"""Create External Field names and assign as column names in Pretty table"""

tableobj.field_names =  ['away_team_id', 'away_team_name', 'away_team_score', 'home_team_id', 'home_team_name', 'home_team_score','match_id', 'match_period', 'match_competition', 'match_round', 'match_season', 'match_seasonId', 'match_skyId', 'match_status', 'match_type', 'match_venue_id','match_venue_location','match_venue_name']

"""Print first 10 rows of the table"""

print(tableobj.get_string(start=0, end=10))

"""Store data in Text File format"""

league_data_text = tableobj.get_string()

filename = 'Sky_competition.txt'

with open(filename, 'w') as file: 
    file.write(league_data_text)